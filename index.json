[{"content":"","date":"December 13, 2022","permalink":"/blog/","section":"Blog","summary":"","title":"Blog"},{"content":"","date":"December 13, 2022","permalink":"/tags/git/","section":"Tags","summary":"","title":"git"},{"content":"","date":"December 13, 2022","permalink":"/tags/github/","section":"Tags","summary":"","title":"github"},{"content":"Hello! Often when I have intriguing ideas, I feel the urge to capture them by writing them down. I created this blog to share some of my more complete thoughts with everyone.\nAbout Me I write about projects that I\u0026rsquo;m working on, self-reflective thoughts, tutorials and other topics I find pertinent. Check out some of my articles below!\nLake of Bays, 2022. A photo I took in the summer before university ","date":"December 13, 2022","permalink":"/","section":"Home","summary":"Hi! This is Alex Zhu\u0026rsquo;s personal website.","title":"Home"},{"content":"No one really teaches Git and GitHub, but it\u0026rsquo;s a must-know if you\u0026rsquo;re ever going to develop software in a group (like at a company).\nGit (2005) and GitHub (2008) are not the same thing, but they are used together. Git is a distributed version control system that you download, a system that tracks changes in files. GitHub is an online host that uses Git to store files and do version control. Using Git and GitHub is important because it allows people to collaborate on code and roll back if they mess something up. In fact, I\u0026rsquo;m using Git right now to update this website! This tutorial will get you up to speed on how to use Git \u0026amp; GitHub together in just a few minutes.\nGit and GitHub logos. 1. Download Git, Make GitHub Account üôã‚Äç‚ôÇÔ∏è # Download Git (free, open source, lightweight) for your computer here: https://git-scm.com/. The most important thing it will add is commands starting with the prefix \u0026ldquo;git\u0026rdquo; that you can type in your terminal. Did you know the IDE Terminal (e.g. VSCode) and the Command Prompt are the same thing? In a terminal, you will need to tell Git your credentials so it knows who is sending code before you begin any projects.\ngit config --global user.name \u0026#34;your name\u0026#34; git config --global user.email \u0026#34;username@example.com\u0026#34; Make a GitHub account at https://github.com/. Ideally, the email you use for GitHub is the same as the email you use for Git. You can customize everything at any time, but do not make it indecent as you will likely use this account for academics and work among other things.\n2. Make Your First Pair of Repositories üì¶üì¶ # A repository is a location where data is stored. You will make two repositories, so two places where your data will live simultaneously, one local on your computer and one remote on GitHub. On your computer, a repository is just a folder that you put files inside of. On GitHub, you create a new repository from your homepage as such.\nMake a new repository. 3. Commit Your First Code üë©‚Äçüíª # After you write some code in your local folder, you want to send it to your remote repository so that it matches. You can do this in terminal (either Command Prompt\u0026rsquo;s or editor\u0026rsquo;s with the following commands. For your first time, follow the code below. The comments provide a technical understanding, you don\u0026rsquo;t need to type them:\ncd \u0026#39;directory-name\u0026#39; //change directory to your local folder, if you need to exit a subfolder do cd .. git init // turns your folder into a newly initialized repository git add . // add all files in the folder to be committed git commit -m \u0026#34;first commit message\u0026#34; // commit all the files and write message that will accompany the change on GitHub git branch -M main // sets the change to occur on the main version of the code git remote add origin \u0026#39;URL\u0026#39; // sets destination of code to remote repository at that GitHub URL git push -u origin main // sends the code to the main version of the code on GitHub. Done! Vacation Analogy to Understand What You Just Did üèñ # Using the analogy of a vacation, imagine your computer is your local airport.\nWhen you change directory, you choose what code luggage you want to take with you. üß≥ When you initialize, you grab a new tray at the bag check-in. ü§è When you add, you put your chosen code into the tray. üì• When you commit, you put the tray with the code in it onto the conveyer belt and add a tag to explain the contents of the luggage. ‚õìÔ∏è When you set the branch, you tell the check-in agent which luggage conveyer belt the code should be received on at the destination airport (e.g. the main one). üõÉ When you add a remote origin, you tell them what airport the luggage is going to. üóº Finally, when you push, you push the tray of code down the conveyer belt and it arrives at the remote destination! ‚úàÔ∏è Man loading luggage onto conveyer belt with help of check-in agent. https://www.cathaypacific.com/cx/en_US/baggage.html 4. All Done! Future Use üîÆ # Now any time you edit your code locally, the airport agent already knows where your code has to go, so all you have to do is:\ncd // if necessary into your local repository git add . // put code in tray git commit -m \u0026#34;explanation of change\u0026#34; // put on conveyer belt git push // send it to its already known remote destination If there are ever new changes on the remote repository that aren\u0026rsquo;t reflected on your local repository (which happens if other people have been working on it from other places), you will have to git pull first to copy the changes to your computer. This gets rough when someone else changed code you\u0026rsquo;re currently working on; then you will have to deal with merge conflicts (not fun).\nCongratulations! You know how to get started with Git and GitHub now! You can code collaboratively, track changes quickly, and do version control. As a next step, you can learn about different ways to use Git and GitHub other than the terminal and how to deal with merge clips.\nMake sure to leave a comment if you have any questions or learned something from this.\n","date":"December 13, 2022","permalink":"/blog/lightning-speed-tutorial-git-and-github/","section":"Blog","summary":"No one really teaches Git and GitHub, but it\u0026rsquo;s a must-know if you\u0026rsquo;re ever going to develop software in a group (like at a company).","title":"Lightning Speed Tutorial: Git and GitHub"},{"content":"","date":"December 13, 2022","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"December 13, 2022","permalink":"/tags/tutorials/","section":"Tags","summary":"","title":"tutorials"},{"content":"","date":"December 8, 2022","permalink":"/tags/github-pages/","section":"Tags","summary":"","title":"github pages"},{"content":"","date":"December 8, 2022","permalink":"/tags/hugo/","section":"Tags","summary":"","title":"hugo"},{"content":"","date":"December 8, 2022","permalink":"/tags/projects/","section":"Tags","summary":"","title":"projects"},{"content":"I wanted a simple blog website that was easy to set up and use, and also one where I had ownership and customization: the answer was a Hugo generated static site hosted on GitHub Pages. In this post, I will explain how I set it all up, some challenges I ran into, and how you can set up your own website like this one!\nMe (illustrated as a duck) working on this website in my dorm. Table of Contents # High Level Overview Downloading and Using Hugo How to Learn Hugo and Use the Docs. Lots of things u can set up, remember to crossreference resources and understand your theme Pushing to Github and creating a Github Pages Website (including .yml file, Github Actions for every automated updates) Bonus: Comments System (link to other article) High Level Overview # This website is a static site, which means that the user sees the results of the fixed code that I write. Nothing will change unless I change something, so it\u0026rsquo;s like a brochure. The benefits of a static site are that they are simpler to set up and run super fast; for my blog, I don\u0026rsquo;t need anything more like a dynamic web page.\nTo create the static site, I did not want to spend too much time playing with finicky HTML and CSS, so I opted to use Hugo. Hugo is an open source static site generator, where the user configures setting files and edits Markdown files, and then Hugo generates the HTML and CSS for you. You can read about Hugo here: https://gohugo.io/\nHugo comes with a ton of usable themes, some of which are perfect for blogs, that help users save even more time. For this website, I used the Congo theme. You can explore themes here: https://themes.gohugo.io/\nThere are many places you can host websites online for free, one of the most popular being GitHub pages. For now, I decided to host my website on GitHub pages, simply because the project was already in a repository on GitHub. This meant it would be relatively easy to set up and make updates to my site later, such as creating new posts. GitHub pages is also good in that it is secured (HTTPS), which makes users less suspicious of your site. By creating a repository named [username].github.io, you can create a special GitHub page that doesn\u0026rsquo;t exist on a subpage (e.g. [username].github.io/my-blog). You can view my repository here: https://github.com/probablyalexzhu/probablyalexzhu.github.io\nDownloading and Using Hugo # (with emphasis on setup, link to useful tutorial). It took me 3 tries so don\u0026rsquo;t give up\n","date":"December 8, 2022","permalink":"/blog/tutorial-how-i-made-this-website-and-you-can-too/","section":"Blog","summary":"I wanted a simple blog website that was easy to set up and use, and also one where I had ownership and customization: the answer was a Hugo generated static site hosted on GitHub Pages.","title":"Tutorial: How I Made This Website and You Can Too"},{"content":"","date":"December 7, 2022","permalink":"/tags/hardware/","section":"Tags","summary":"","title":"hardware"},{"content":"Our final project for SE101 was supposed to be a exercise tracker device that would revolutionize the fitness experience. It ended up being\u0026hellip; let\u0026rsquo;s call it a good learning experience. A lot of this article only exists thanks to my group members\u0026rsquo; efforts, so thanks to all of them for being great team members as we persevered together.\nSE 101 Final Project in progress, 2022 As software engineering students, it was tough when our final project guidelines forced us to use hardware. No one on my team of five, 4Fun, had much hardware experience, so we had to research a lot from scratch and made a lot of mistakes on the way. My plan in this article is talk about what we made on a technical level and provide takeaways for the future.\nWhat We Made üí™ # Hopefully you find the video entertaining. I must admit I was quite proud of the video we filmed and I edited, but I also must say that our cohort has some very talented video producers! One of my favourites was the skit about the gambling addict who needed special glasses to win at Blackjack and save his family.\nAnyways, the Github Repo: https://github.com/benymng/4FUN\n4Gains is a little device you put on a weight stack and it counts your reps, sets, and provides feedback on your performance. The feedback is all sent to a web app you can view on any device. I worked mainly on the hardware and backend sections of the project.\nHardware ü¶æ # Block diagram for hardware. This was our first time working with Arduino. We hooked up an Arduino Uno R3 to a battery, breadboard, and connected an LED, HC-SR04 Ultrasonic Distance Sensor, and ESP8266 Wi-Fi module. At first, we had programmed in an accelerometer to calculate stability, and planned to also program a sound sensor along with the distance sensor. However, we realized this was not the play for two main reasons. One, the power that three sensors would draw from the Arduino would be too much and make all the sensors not work properly. Secondly, the baud rates, the rates that data is transferred in a communication channel, were different for all the sensors, so the code would be pretty messy as well.\nWe also had crazy trouble setting up the ESP-8266, and getting wireless communication to work probably ate up a fortnight of our team\u0026rsquo;s time. The issue was power supply, not something we could really fix without buying a ton of new parts. Instead, we just had delay times between every command required to connect to Wi-Fi. This really slowed down progress, as every test would require a minute just to connect to Wi-Fi. This issue was made worse because we needed to connect to someone\u0026rsquo;s phone hotspot, as the university\u0026rsquo;s wifi interface was too secure for our questionable device to connect to.\nWiring diagram for the Arduino hardware. Hardware Takeaways üí° # Hardware is hard, so do less. While in software it may be easy to program three sensors that all inherit the \u0026ldquo;sensor\u0026rdquo; interface, it isn\u0026rsquo;t as easy to scale up in hardware projects. If it can be done easily, do it easily. By only using the distance sensor in hardware, we could calculate the acceleration by taking the derivative. No need for an accelerometer! We could also count reps and sets based on how high or low 4Gains moved up and down the weight stack. Do not make things more complicated than they need to be, especially on the hardware side of things.\nIntegrate first. Write shitty versions of your code and make sure all of it works together; hardware, backend, and frontend. This ensures that your final project will actually work. But on top of that, it means you can test way faster. After we had Wi-Fi connection working (mostly), we eventually started testing the hardware code without connecting to Wi-Fi every time. This saved us lots of time when coding the rest of the hardware, such as the LED response and detecting when the user is done a set (see below).\n/* Code Snippet of arduinoFinalWifi.ino */ // end set if statonary too long if(countTime \u0026gt; 25) { // 2.5 seconds // create string to be sent to web server String countRepString = \u0026#34;!\u0026#34; + String(countRep) + \u0026#34; \u0026#34;; String combined = countRepString + toSend; sendData(combined); // Serial.println(combined); // flash the LED! for(int i = 0; i \u0026lt; 8; i++) { digitalWrite(ledPin, HIGH); delay(125); digitalWrite(ledPin, LOW); delay(125); } } All in all, I feel like working with the hardware taught me a lot and I\u0026rsquo;ll be a lot more confident working with similar in the future.\nBackend ‚öôÔ∏è # Block diagram for hardware. On the backend, I wrote ParseGraphForDistance.py, which used the BeautifulSoup library to parse the text on the web server via its IP Address that the Arduino sent to the hotspot network. It then sent the text to the MongoDB database, where it would be analyzed to create takeaways like if the user is lifting too much or too little, and graphs that are displayed on the web app. For the prototype presentation where we didn\u0026rsquo;t have a database yet, I also used numpy to graph the data as a proof of concept of what the user would be able to see in the final product. These were both new libraries for me, but I am also much more comfortable with these now than before. It\u0026rsquo;s really great how many new things you are forced to learn when building a project!\nUnfortunately, I coded what is likely the weakest link in the program. However, this is by nature of the hardware being underpowered, and not me being clumsy. Since the ESP8266 Wi-Fi module wasn\u0026rsquo;t powered well, the data it sent to the server was on-and-off, so the BeautifulSoup parser often failed to access the server and retrieve the data. Here\u0026rsquo;s the httplib error that we have no control over:\nA connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond Backend Takeaways # Do research before you design your system. At Waterloo, we\u0026rsquo;re lucky to have access to a ton of human capital, mainly engineers that do hardware frequently (not us). We should have asked them what the best way to get data from an Arduino to a database was. We dived into building after just doing some Google searching, where we concluded that since we can\u0026rsquo;t read straight from the Arduino serial monitor without using PuTTy, the best option must be uploading to a web server and parsing the text. Our solution is really like trying to pour water from a shower to an anthromorphic alligator through a bunch of complicated pipes, and hoping nothing leaks. Where\u0026rsquo;s My Water gameplay, photo from https://games.lol/blog/wheres-my-water-2-beginners-guide/ It turns out there\u0026rsquo;s a much more direct solution, which another group figured out right before the deadline. Connect the Wi-Fi board, preferably a ESP32 that can be powered separately so it is fully powered, to the hotspot and upload data to a cloud server hosted by a service such as Render: Cloud Application Hosting. Then, host a JavaScript file that runs 24/7 on the cloud server that pushes the data to a MongoDB database anytime there\u0026rsquo;s an update to the server. I believe this works better because it draws less power as it doesn\u0026rsquo;t have to create its own local server, and you don\u0026rsquo;t have to manually run the parsing program on a computer on the same network as the Arduino. üì∂\nFrontend üé® # Oh yeah, and here\u0026rsquo;s the incredible frontend that really ties our project together. I had no hand in any of this, but it was very cool to watch. Our team started by designing it on Figma, then implementing it for real with React and Tailwind.\nBlock diagram for hardware. Frontend of the app, done by my fabulous teammates. Conclusion # The SE101 final project was a great learning experience. I\u0026rsquo;d like to thank my team again. In the end, I\u0026rsquo;m proud of our team for pulling together and creating something beyond what I thought was possible before we began, and I believe the rest of the teams in the cohort likely concluded with a similar sentiment. We all watched the past years\u0026rsquo; project demos and thought, \u0026ldquo;what am I doing in this program, these guys are all cracked,\u0026rdquo; but once we did it ourselves, we slowly built the projects we had dreamt of.\nTL:DR of my takeaways of the project once more: # Hardware is hard, so do less. Integrate first. Do research before you design your system. ","date":"December 7, 2022","permalink":"/blog/se-101-final-project-4gains/","section":"Blog","summary":"Our final project for SE101 was supposed to be a exercise tracker device that would revolutionize the fitness experience.","title":"SE 101 Final Project: Full Stack Arduino Exercise Tracker (4Gains)"},{"content":"","date":"December 7, 2022","permalink":"/tags/software-engineering/","section":"Tags","summary":"","title":"software engineering"},{"content":"","date":"December 7, 2022","permalink":"/tags/waterloo/","section":"Tags","summary":"","title":"waterloo"},{"content":"Hi! My name is Alex Zhu (he/him). # I\u0026rsquo;m studying Software Engineering at the University of Waterloo and will probably graduate as a member of the class of 2027.\nWaterloo Campus Pizza, 2022 I grew up in the Ontario GTA, doing a large variety of things like playing tennis, running a YouTube channel, making podcasts and music, debating competitively, and playing video games a bit too competitively.\nAt some point I became known online as probablyalex and the duck you see plastered across this website. Later down the line I decided to study software. Right now, I consider myself to be a:\nFrisbee Player (intramurals) ü•è Skateboarder (navy blue pennyboard for nearly a decade) üõπ Sci-Fi Fan (Star Wars: Andor was an incredible feat of filmmaking) üåå Leafs Fan (they just keep giving me hope every year) üèí Casual Rapper and Producer (somewhere hidden in the deep depths of SoundCloud rap) üé§ AYCE Sushi Lover (bent over, staggering out of the sushi spots) üç£ and a Laptop Sticker Collector (there\u0026rsquo;s a method behind the madness I swear) üíª Who will I become in the future? Only time will tell.\nSome Coding Jams # ","date":"December 4, 2022","permalink":"/about/","section":"Home","summary":"Hi! My name is Alex Zhu (he/him).","title":"About"},{"content":"","date":"December 4, 2022","permalink":"/tags/about-me/","section":"Tags","summary":"","title":"about me"},{"content":"","date":"December 4, 2022","permalink":"/tags/first-post/","section":"Tags","summary":"","title":"first post"},{"content":"","date":"December 4, 2022","permalink":"/tags/motivations/","section":"Tags","summary":"","title":"motivations"},{"content":"","date":"December 4, 2022","permalink":"/tags/thoughts/","section":"Tags","summary":"","title":"thoughts"},{"content":"Please read: this is not about relationships. This is about why I want to blog, and why you should read my blog. We should be reader and writer ‚ô•Ô∏è\nWanderer Above The Sea of Clouds. One of my favourite paintings, symbolically Who? üë®‚Äçüíª # I\u0026rsquo;m Alex Zhu, a software engineering student in SE \u0026lsquo;27 at UWaterloo. I grew up in the Ontario GTA and did a variety of activities, never settling on one thing. Random fact, but this isn\u0026rsquo;t my first blog. The first blog I wrote for was on the website I made for my Clash of Clans clan, Derp Kingdom, during my childhood. This blog is one of my latest projects that I want to put a significant chunk of time into.\nI hope to write for you, fellow peers and journeyers in the tech field. But hopefully I never meet you in real life, because then I would have a lot of explaining to do about this website.\nWhy? ü§î # I want to teach others. I don\u0026rsquo;t have a lot to share, but if we all share the little that we know, the world would be quite a bit better. Every person who replies on StackOverflow is someone\u0026rsquo;s GOAT. I hope my posts can provide the tiniest glimpse into my mind, and maybe something in there provides some value to you. I really want to hear from you! If you ever have beef with any of my ideas, feel free to send me an email and I\u0026rsquo;ll probably reply, and I\u0026rsquo;ll also try to get comments set up on here.\nWhat? üë®‚Äçüéì # I plan on blogging about my thoughts on life related to self-improvement and projects I work on as a software engineering student. I feel like a lot of stuff goes on up here, and I\u0026rsquo;m dying to share some of it with others. No guarantees that it\u0026rsquo;ll be any good for you, but a new perspective can never hurt. In terms of projects, there\u0026rsquo;s a real joy in creating cool things, and a very real urge to show as many people as possible what you\u0026rsquo;ve created. I plan on making a post at least once every two weeks, but updating is likely to be erratic and based on the ebbs and flows of writing inspiration.\nMy Blogging Goals üö® # Firstly, I want to consolidate my knowledge further by articulating and writing it a second time. As W. Edwards Deming said, \u0026ldquo;If you can\u0026rsquo;t describe what you\u0026rsquo;re doing as a process, then you don\u0026rsquo;t know what you\u0026rsquo;re doing.\u0026rdquo; Throughout my journey, I want to make sure I\u0026rsquo;m storing what I\u0026rsquo;ve learned in my inventory so they can help me with whatever the current opportunity is. By blogging, I should be able to recall what I learned from my past experiences easier. Why not social media? It simply isn\u0026rsquo;t a space catered for more formal thought or long ramblings, and you have little or no control over your content.\nSecondly, In high school, I debated competitively almost every weekend. Even though I\u0026rsquo;m studying software, I still enjoy using my language skills (not programming languages) and I want to keep them sharp and put them to good use.\nI\u0026rsquo;m hoping that in half a year, there will be a wealth of ideas and a small community built around this website that enriches everyone\u0026rsquo;s lives. The internet can do great things for people, and many of them start at a grassroots level like here.\nFinal Words ‚úçÔ∏è # Every day, we have formative experiences that can change our worldview and improve who we are. This could be talking to a mentor, on the train, working in a team, or playing a video game. Many people know that these experiences can happen, and they do well in seeking out these experiences by leaving their comfort zone and doing new things.\nWhat may be slightly less common is really capturing these experiences. I believe that by living in the moment and being receptive, you can get conclusions and learn from even seemingly mundane events. Then, by writing these ideas down, you can retain them better and create something real that you can follow. For me, this blog is an outlet for my ideas to help me grow.\nFor you, it is hopefully a less mundane part of the mundanity of life and a place you can learn from.\nThank you reader!\n","date":"December 4, 2022","permalink":"/blog/why-we-should-be-together/","section":"Blog","summary":"Please read: this is not about relationships.","title":"Why We Should Be Together"},{"content":"","date":"January 1, 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]