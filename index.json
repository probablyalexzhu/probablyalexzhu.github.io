[{"content":"Hello! I post about my projects, personal experiences, and philosophies about technology on this site. Take a look around!\nI\u0026rsquo;m always open to collaborations and discussions. Please feel free to reach out to me via the links above! üëã ","date":null,"permalink":"/","section":"Home","summary":"Hi! This is Alex Zhu\u0026rsquo;s personal website.","title":"Home"},{"content":" For ease of search, you can filter by tags (e.g., work, project, debating) by clicking on them!\n","date":null,"permalink":"/portfolio/","section":"Portfolio","summary":"For ease of search, you can filter by tags (e.","title":"Portfolio"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/tags/work/","section":"Tags","summary":"","title":"work"},{"content":"","date":null,"permalink":"/blog/","section":"Blog","summary":"","title":"Blog"},{"content":"","date":null,"permalink":"/tags/music/","section":"Tags","summary":"","title":"music"},{"content":"I really enjoyed studying with some YouTube mixes this term. I discovered a lot of new genres (namely UK Garage, Jungle, DnB) and incredible tracks, thanks to the passionate curation and mixing these amazing YouTubers are providing. I found they helped with focus and energy more than any energy drink could, as the seamless transitions kept me engaged, and I didn\u0026rsquo;t have to worry about what the next song would/should be and go fiddle around in Spotify.\nHere are some of my favourite mixes/albums for you to enjoy:\n\u0026ldquo;I‚Äôm a delivery man and Iv been bumpin this all week. Feeling like I‚Äôm speed running a video game.\u0026rdquo; Immaculate vibes, high energy UKG mix: Nostalgic and futuristic Jungle + DnB mix: Extremely optimismic and classy mix w/ live video: Imaginative and dreamy sci-fi album by the talented DUSQK: \u0026ldquo;clicked cuz of the snazzy t rex, stayed cuz most of the mix features my fave artists\u0026rdquo; A diverse 2-hour journey through UKG by Opi: Shout out my friend carrizo, who has a great EDM set/mix collection of his own: https://carrizo93.github.io/lists/edm-set-collection/\n","date":"August 19, 2024","permalink":"/blog/spicy-youtube-mixes/","section":"Blog","summary":"I really enjoyed studying with some YouTube mixes this term.","title":"Spicy YouTube Mixes You Need To Listen To üíøüî•"},{"content":"","date":null,"permalink":"/tags/thoughts/","section":"Tags","summary":"","title":"thoughts"},{"content":"I wanted to share a few lessons I learned during this co-op search that aren\u0026rsquo;t immediately obvious:\nApplication Process üß≥ # Applications that require special action stated in the job description, e.g. send us an email w/ xyz text, have a much higher chance for an interview if you do it. A lot of potential applicants miss it or don\u0026rsquo;t bother. A generalized, one-size-fits-all cover letter doesn‚Äôt work too well for any type of company. Etiher don\u0026rsquo;t write one, or customize adequately. Ask past co-ops about their experience at the company and the interview questions they remember to help you prepare. Then, practice your answers. Interview Process ü§© # This one\u0026rsquo;s from debate: before your interview, do some voice warmups. Be energetic, excited, and ready to talk slowly and clearly. During the interview, be confident and remember to communicate well even during technical interviews. Start broad, but make sure to also provide lots of specific details to show expertise. Strike the balance between overly humble and cocky, both are instant killers of your chances at a successful interview. What are the weaknesses on your resume that might give the interviewer reservations about hiring you? Quell them in the interview. After the interview, send a personalized and genuine follow-up email referring to interview details and why you‚Äôre a good fit. Remember to have faith that things will work out if you continue to create your own luck. Hopefully these tips help you out!\n","date":"August 17, 2024","permalink":"/blog/2b-coop-lessons/","section":"Blog","summary":"I wanted to share a few lessons I learned during this co-op search that aren\u0026rsquo;t immediately obvious:","title":"2B ‚Äî Co-op Search Lessons"},{"content":"","date":null,"permalink":"/tags/co-op/","section":"Tags","summary":"","title":"co-op"},{"content":"","date":null,"permalink":"/tags/waterloo/","section":"Tags","summary":"","title":"waterloo"},{"content":"As a part of CS 348, Introduction to Database Management, we had the option to create a project using a database. We created Formula 1 SQL, a data-retrieval app to give insights from a downloaded F1 database. It has seven functionalities, optimized with indexing and caching, and other fancy features. All of this is explained in the demo video, which you can watch here!\nCheck out the site at https://f1-sql.onrender.com/ and our repo at https://github.com/Ari1029/CS348Project here. Thanks to CS 348 for giving us this project-based learning opportunity, and my teammates for teaching me a lot of new stuff too.\n","date":"August 8, 2024","permalink":"/blog/f1-sql-project/","section":"Blog","summary":"As a part of CS 348, Introduction to Database Management, we had the option to create a project using a database.","title":"CS348 Final Project ‚Äî Formula 1 SQL"},{"content":"","date":null,"permalink":"/tags/fullstack/","section":"Tags","summary":"","title":"fullstack"},{"content":"","date":null,"permalink":"/tags/projects/","section":"Tags","summary":"","title":"projects"},{"content":"","date":null,"permalink":"/tags/software-engineering/","section":"Tags","summary":"","title":"software engineering"},{"content":"","date":null,"permalink":"/tags/project/","section":"Tags","summary":"","title":"project"},{"content":"Hi, I\u0026rsquo;m Alex! üëãüê§ # I‚Äôm a Software Engineering student at the University of Waterloo. I like to think of myself as being able to thrive in many contexts, having developed skills from exploring a wide range of interests like coding and debating. My goal is to combine these skills to solve real-world issues through technology. I learn quickly, work well in teams, and am interested in flexible roles where I can be creative and leverage my wide skill set.\nI care about doing meaningful ethical work for the world. Other than coding, I love filmmaking, reading (philosophy, psychology, and sci-fi), competitive debating, and rock climbing.\nIf any of this resonates with you, please reach out!\n\u0026quot;Bird That Carries You Over A Disproportionately Small Gap\u0026quot; from Undertale that inspired my online avatar Best Songs of 2024 üéß # A jack of all trades is a master of none, but often times better than a master of one. ","date":null,"permalink":"/about/","section":"Home","summary":"Hi, I\u0026rsquo;m Alex!","title":"About"},{"content":"","date":null,"permalink":"/tags/about-me/","section":"Tags","summary":"","title":"about me"},{"content":"","date":null,"permalink":"/tags/debating/","section":"Tags","summary":"","title":"debating"},{"content":"","date":null,"permalink":"/tags/debate/","section":"Tags","summary":"","title":"debate"},{"content":" I spent the winter break in Vietnam competing at the World Universities Debating Championship 2024, and also filmed a vlog for it! It was an incredibly fun trip, so fun that at times I was living too much in the moment to film. Still, I think I did a decent job of portraying the vibes of the trip overall. I am incredibly grateful to have gotten to compete at this event, and I hope you enjoy the vlog!\nPlease share w/ others, like, and subscribe to UW Debating Society, and follow us on Instagram @uwdebate!\n","date":"January 8, 2024","permalink":"/blog/debate-vlog-wudc-2024/","section":"Blog","summary":"I spent the winter break in Vietnam competing at the World Universities Debating Championship 2024, and also filmed a vlog for it!","title":"UW Debate Vlog ‚Äî Vietnam WUDC 2024"},{"content":"","date":null,"permalink":"/tags/vlog/","section":"Tags","summary":"","title":"vlog"},{"content":" How we spend our days is, of course, how we spend our lives.\nHi everyone, I haven‚Äôt written a blog in a while so I thought I would do a quick end-of-term update (also because my roommate Ryan reminded me to)! I‚Äôm currently at the White Rhino Cafe in Dallas, TX writing this, as Waterloo Debate is here for a layover on the way to Ho Chi Minh, Vietnam for the World Universities Debating Championship!\nWhere I am right now :) Photo cred Taira Debating üó£Ô∏è # I‚Äôve invested a lot more time this term into debating, having competed at four tournaments and judged/tabbed at two, with WUDC yet to come. Debating took me on trips to universities across Canada and now across the world; it‚Äôs like being Isekai\u0026rsquo;d every other weekend to an alternate, non-Waterloo reality. I was worried that spending so much time debating would harm my grades, but I think it actually helped with work-life balance in the big picture (grades were fine ‚Äî my average was safely over the magic number of 80 needed for opportunities like study abroad or research).\nJumanah and I cooking at Toronto Open Additionally, returning to debate has been highly rewarding, just being able to spend time with cool people and make deep connections, as well as travel more. I‚Äôve felt very fulfilled this term thanks to the company of others and I think those memories matter much more than a minor effect on grades.\nContent Creation üìπ # Filming the McGill Central Novs vlog was a highly rewarding reawakening of my creative side. I‚Äôve done more music production and acquired a saxophone, but during my co-op term in Winter 2024, I plan on dedicating more time to content creation for Waterloo Debate as VP of Marketing. A friend and I are gonna go crazy on vlog and short-form content creation (including right now on the WUDC trip!), as well as designing a new brand for the club and merch like crew necks + more stickers!\nDebate sticker in the style of subway on a friend\u0026rsquo;s laptop Reading List üìö # Over the summer before 2A, I read a lot of books, but I think that my favourite was Range: Why Generalists Triumph in a Specialized World by David Epstein.\nRange is a well-researched book about how having a wide skillset and being a jack-of-all-trades can actually be as beneficial as specializing, giving examples of Roger Federer (who played many sports and started tennis at eight) vs Tiger Woods (who was taught only golf from birth). My personal example is Auston Matthews, who was incredible at both baseball and hockey as a child; legend says he would hit a grand slam, then leave early to go score a hat trick. Range‚Äôs ideas have been incredibly liberating, in that they provide a practical justification for doing things that don‚Äôt seem related to goals or career progression. For example, debating or content creation seems very distant to software, but in some strange way, it ends up enriching skills that pay off in the long run even if they don‚Äôt lead to immediate career success. Over co-op, An Immense World by Ed Yong and All About Love by Bell Hooks are on my reading list.\nUptown Waterloo has some really quaint bookstores like Old Goat Books and Words Worth Books; some really nice hidden gems to visit!\nOther Stuff üíß # Co-op search was difficult this term ‚Äî the market is really rough right now. Hopefully, the third co-op search will be better! I‚Äôm hoping to be more proactive and reach out for exciting opportunities, i.e. climate tech. I‚Äôm working on developing a bit of fashion style, so hopefully, I can incrementally get a bit more dripped out. WUDC is giving us really nice tote bags and lanyards, so that\u0026rsquo;s a start! Thank you to everyone who made this a memorable term! Merry Christmas and happy holidays everyone! üéÑ # ","date":"December 24, 2023","permalink":"/blog/2a-random-updates/","section":"Blog","summary":"How we spend our days is, of course, how we spend our lives.","title":"2A ‚Äî Random Life Updates"},{"content":" Last weekend, The UW Debate Society went to McGill Canadian Central Novice Championship 2023 and had a great time! When I woke up at 5 AM for the tournameent, I thought to myself \u0026ldquo;vlogging this trip would be cool\u0026rdquo;, and so now this video exists. I had a great time filming it and tapping into my video production skills (finished editing on the bus ride home üí™), and I hope you enjoy this inside look at how debate tournaments work.\nPlease share w/ others, like, and subscribe to UW Debating Society!\n","date":"October 2, 2023","permalink":"/blog/debate-vlog-central-novs/","section":"Blog","summary":"Last weekend, The UW Debate Society went to McGill Canadian Central Novice Championship 2023 and had a great time!","title":"Waterloo Debate Vlog ‚Äî McGill Central Canadian Novice Championship 2023"},{"content":"","date":null,"permalink":"/tags/pocketbase/","section":"Tags","summary":"","title":"pocketbase"},{"content":"","date":null,"permalink":"/tags/react/","section":"Tags","summary":"","title":"react"},{"content":"Project-based learning is one of the most enjoyable and effective ways to learn new skills. You get to develop something uniquely fascinating to you, and the work is just challenging enough at the edge of your abilities to be fully engaging. Here‚Äôs how I learned full-stack dev by creating a project and you can too!\nCheck out the final project here: https://giftlax.vercel.app/\nWhy read a textbook or take a course when you can make a project? 1. Figuring out what to make ü§î # I wanted to learn front-end development, specifically React, and how to work with databases like SQL or MongoDB. These were holes in my knowledge as I hadn‚Äôt had a chance to learn these technologies before, so I decided my project would include these technologies.\nTo turn these skills I wanted to learn into a project, I could have worked on a stock project like a to-do list or notes app. However, this would a) not be fun because I don‚Äôt care about making another notes app, and b) look unimpressive because you could easily copy existing code to make something stock.\nInstead, I thought about what I wanted to make. I suck at remembering and deciding what to give people as gifts, so I designed a gift tracker to help people plan and think of gifts to give. I named the app Giftlax, and its icon is a little Snorlax holding a gift ü•∫! This idea already exists, but the few apps that execute it are not very notable.\nUltimately, the most crucial thing with project ideas is that you ideate it yourself and create it yourself, even if it already exists in some form. From the idea, I thought of a minimum viable product idea with just the four CRUD functions (create, read, update, delete). I sketched a simple UI on my tablet, taking inspiration from Mobbin, an excellent UI \u0026amp; UX research website.\nAn early sketch of MVP idea 2. We do a little learning üè´ # Before jumping in headfirst, I read through the React docs https://react.dev/learn to learn some basics about how React works at a lower level. This taught me about crucial things that would have been confounding while developing, such as lifting state up, the difference between states and props, server versus client-side rendering, and how hooks work. This general understanding helped massively while debugging code later, but I also didn‚Äôt spend infinite time reading docs before jumping in (probably \u0026lt;10 hours reading docs total). After learning about half of everything I wanted to know to get started, I dived into the project as I would learn the rest as I went.\n3. Getting started üö¶ # For full-stack, I built the front-end first and then added the back-end database later. I created a Next.js app since I planned on deploying it to Vercel later, and they work well together. I followed the documentation and YouTube tutorials to get set up with creating a Next app with the React framework. Unbeknownst to me, I used the brand-new Next.js 13 app router with the /app directory, so very little documentation was available. This newness led to a few hiccups during development without much online help, but it worked out fine with a couple of hours of extra debugging.\nTo save time making components that had some semblance of aesthetics, I used the component library Chakra UI. This decision probably saved me days of just designing components. Following the minimum design I sketched earlier, I started assembling components and created the basic front-end layout that the final app would have.\nPutting pieces together in the early stages with Chakra UI 4. In the thick of it üë®‚Äçüíª # Using Auth.js, formerly NextAuth.js, I made it so you would have to log in to view certain pages. I followed one of the only tutorials on environment variables and setting up Google Cloud for app authentication for Next.js 13. Along with that, I turned the one-page application into a website with a home page and a separate page for the app to live on.\nNow, it was time to set up a database. I learned some SQL using Khan Academy, as I wanted to understand relational databases better to fill a gap in my knowledge. Even though a non-relational database would have worked fine, I prioritized learning in choosing my tech stack.\nFrom a Fireship video, I discovered Pocketbase, an open-source SQLite back-end that was super easy to set up. I ran the database locally on my computer first, then integrated it into my app, making API requests from asynchronous functions as needed. This connection between the front end and database was super satisfying, like docking a spacecraft to the ISS after hours of tinkering.\nOnce the database established a connection to the front end, I implemented more features and tested their effectiveness by interacting with the local database. Eventually, I decided to scrap together a chat app quickly to add to the project to demonstrate the real-time and multi-user capabilities of the database. Finally, I got my friend to test the app and give feedback, and cleaned up the app with some pretty front-end components and transitions.\nScreenshot of an early version of the chat feature 5. Deployment üì© # I‚Äôm a cheapskate when it comes to deploying things online. Pocketbase is entirely self-hosted, so I did it with the free resource allowances from Fly.io (https://github.com/pocketbase/pocketbase/discussions/537) and then deployed the Next.js front-end on Vercel + GitHub. In theory, the app should now run free forever, although something will prooobably go wrong :)\n6. Conclusion üôÇ # Screenshot of main gift tracker app Overall, the whole process of project-based learning was a ton of fun. I encourage anyone learning anything new to do it through an original project idea; there are so many online resources nowadays to help with the process.\nStack of stuff I got to learn ","date":"June 30, 2023","permalink":"/blog/tutorial-learning-full-stack-project/","section":"Blog","summary":"Project-based learning is one of the most enjoyable and effective ways to learn new skills.","title":"Tutorial: Learning Full-Stack Development With a Project"},{"content":"","date":null,"permalink":"/tags/tutorials/","section":"Tags","summary":"","title":"tutorials"},{"content":"","date":null,"permalink":"/tags/digital-minimalism/","section":"Tags","summary":"","title":"digital minimalism"},{"content":"","date":null,"permalink":"/tags/studying/","section":"Tags","summary":"","title":"studying"},{"content":"If you haven\u0026rsquo;t yet, make sure to read A Case for Digital Minimalism. Without further ado, here\u0026rsquo;s my list from least difficult to most on how to become a minimalist (without throwing out your phone or becoming a hermit):\n1. Declutter Home Screens üì≤ # Take apps that you don\u0026rsquo;t want to use off your desktop or bookmark bars, and you won\u0026rsquo;t instictively open them as often. Turn off notifications to reduce impulsively opening things. 2. News Feed Eradicator üóûÔ∏è # This is a great browser extension that replaces home feeds on platforms like Twitter or YouTube with quotes. It reduces passive consumption and forces you to search for content that you know you actually want to see, rather than letting algorithms which prioritize their profit over your happiness. 3. Block Sites üõ°Ô∏è # The Block Site browser extension allows you to block websites that you don\u0026rsquo;t want to waste time on. Many phones also have this feature built into them, so you can also block sites on your mobile device. 4. Delayed Gratification ‚è≥ # Let\u0026rsquo;s say you want to watch a YouTube video. You can practice delayed gratification by adding to your Watch Later and watching it at the end of the day. This will improve your ability to focus on priority tasks. 5. Reduce Your Online Presence üëª # Unsubscribe from subreddits and feeds in general that you don\u0026rsquo;t care about. Delete social media accounts and refrain from creating new ones. You won\u0026rsquo;t really miss anything; your friends will probably tell you about anything worth knowing about. If you need to message people, give them your number or limit messages to platforms only for messaging, like Discord. 6. Find IRL Alternatives ü¶ó # Use a paper planner, plan in-person hangouts, study in the library, read a book. Fill up your life so you have less time to waste on passive media consumption. 7. Airplane Mode ‚úàÔ∏è # Put your phone on airplane mode when you don\u0026rsquo;t want to use it, such as during the school or work day. 8. Black and White ‚¨õ‚¨ú # Putting your phone on black and white mode makes media less interesting, and thus you are less likely to waste time on it. You can do this in the accessibility settings of the iPhone, and in the settings of any other phone too. 9. Turn It Off üì¥ # Turn your phone off unless you really need to use it. If possible, put distractions far away from you, such as away in your bag. 10. Low Data Plans üì∂ # Get low data plans so that when you are out and about without Wi-Fi, it becomes literally impossible to waste time online. Of course, this list isn\u0026rsquo;t comprehensive and different things work for different people, but I hope this gave you some ideas! üëç\n","date":"June 8, 2023","permalink":"/blog/ten-tips-for-digital-minimalism/","section":"Blog","summary":"If you haven\u0026rsquo;t yet, make sure to read A Case for Digital Minimalism.","title":"Ten Tips for Digital Minimalism to Win Back Your Attention"},{"content":"A while ago, I was reading The Anthropocene Reviewed by John Green, and came across this footnote.\nIt occurs to me that technology often brags about solving problems it created. Nothing can exemplify this more than the new Apple Vision Pro that was just announced, an even more convenient way to consume media. The marketing of the Vision Pro brags about making content more immersive and engaging by merging it with the real world and being available from anywhere. However, the problem that this solves is the constant need for distraction, which was really started by smartphones like the iPhone shortening attention spans many years ago. Nowadays, there are people who can\u0026rsquo;t use the toilet without bringing their phone, and children who can\u0026rsquo;t watch a 30-second video without a split-screen Subway Surfers clip playing.\nWe all have a limited amount of attention available to invest, and if we are spending all our attention on uncomplex leisure, we have less available to solve complex goals and provide for enjoyable growth. Not only that, but spending too much time online shrinks our attention spans and makes it harder to focus when we want/need to later. More attention spent on TikTok is less attention for rewarding activities that make you lose track of time, such as having conversations with people or playing sports. Technology has not only taken away our time but also decimated our ability to direct our attention, and the Vision Pro is potentially another terrifying leap in the wrong direction.\nOne of the paradoxes of modern society is we have more entertainment at our fingertips than ever before, but many of us are actually less happy when consuming TV or social media. Through the internet, we can read and watch things hundreds of times in a day that our ancestors could only dream of seeing in a lifetime, but they really don\u0026rsquo;t improve our existence at all. As Mihaly Csikszentmihalyi wrote in Flow,\n\u0026ldquo;Many leisure activities‚Äîespecially those involving the passive consumption of mass media‚Äîare not designed to make us happy and strong. Their purpose is to make money for someone else. If we allow them to, they can suck out the marrow of our lives, leaving only feeble husks.\u0026rdquo;\nSo to be happier, we need to win back our attention spans from parasitic distractions by minimizing technology use to make the most of our free time. This is the concept of Cal Newport\u0026rsquo;s digital minimalism: \u0026ldquo;A philosophy of technology use in which you focus your online time on a small number of carefully selected and optimized activities that strongly support things you value, and then happily miss out on everything else.\u0026rdquo; Feel free to watch this great video for more information on the origins of digital minimalism as well!\nEdit July 30, 2023: Having now read Digital Minimalism by Cal Newport, I highly recommend his book and considering the ideas in it. Part of what he says is that \u0026ldquo;quick fixes\u0026rdquo; only stick long-term if they\u0026rsquo;re part of a broader philosophy that justifies the fixes being done, so make sure to understand exactly why you\u0026rsquo;re taking specific actions.\nMy next post will be Ten Tips for Digital Minimalism to Win Back Your Attention.\n","date":"June 7, 2023","permalink":"/blog/a-case-for-digital-minimalism/","section":"Blog","summary":"A while ago, I was reading The Anthropocene Reviewed by John Green, and came across this footnote.","title":"A Case for Digital Minimalism"},{"content":"","date":null,"permalink":"/tags/ai/","section":"Tags","summary":"","title":"AI"},{"content":"While I was writing a Facebook post introducing my friend David as director of a debate tournament, I started thinking about the creative writing process and whether AI would be able to do it or not. How good is AI at creative writing, and how might it improve in the future?\nAI vs. Creative Writing, illustrated. What is ChatGPT? ü§ñ # ChatGPT is the current leading AI product that has people talking. It is a large language model (LLM) and generative pretrained transformer, which means that it has been trained on a massive dataset from the internet to transform data into text. You can give it prompts, and it will synthesize text to answer your requests. People have been asking ChatGPT to write poems, emails, speeches, and more.\nHey, not bad! While AI has been criticized for its factual accuracy, it is generally considered a good writer. I believe the opposite: the factual accuracy of AI will improve as it is trained on more recent data, such as newly published articles, but it will never surpass human writing. This is beacuse AI is fundamentally not creative.\nComputers are really good at left brain operations, but less good at right brain creating as of now. To borrow some ideas from Mark Manson\u0026rsquo;s Everything is F*cked, the human brain has a thinking part (frontal lobe) and a feeling part (amygdala and others). We have used our thinking brain to create computers which surpass our own thinking capabilties massively already. This looks like programmers thinking of better algorithms for finding the best move in chess, then getting checkmated by a CPU.\nWe are yet to implement a truly emotional/creative AI yet. Logic does not yield creative results; the type of thinking required is fundamentally different. Creative output is driven by human emotion; if we were purely logical beings satisfied by facts and numbers, we would have nothing to gain from creative work. The fact that creativity is hard to define is proof that we could not have programmed it into any AI yet.\nhttps://theconversation.com/ai-can-produce-prize-winning-art-but-it-still-cant-compete-with-human-creativity-190279 Right now AI can pretend to be creative, but the day AI develops true creativity (the capability to make its own decisions and generate entirely new content) will be a milestone in humanity\u0026rsquo;s story. This day is distant: we struggle to understand our own emotions (that\u0026rsquo;s why the field of psychology exists) and are far from knowing how to model our brain into a computer program.\nAnyways, how good is AI at imitating writing?\nWhat It\u0026rsquo;s Good At ü•á # Brainstorming things to write about Technical, academic writing where dry is okay (but needs fact checking to prevent hallucinations from being published) Helping foreign speakers communicate ideas with correct grammar What It Struggles With ü§Ø # Knowing your audience\u0026rsquo;s background information Writing sensible analogies, metaphors, anecdotes Having any tone or personality that feels genuine Coming up with puns Being succinct (it writes verbosely) Taking a perspective on an issue (if you ask AI about the trolley problem, it\u0026rsquo;ll give reasoning that conflicts with its decision) Originality \u0026ndash; it merely synthesizes what others have already written (what happens when AI starts being trained on the output of other AI? Garbage in, garbage out.) This email is a great starting point, but definitely not ready to send. Tips for Writing with AI ‚úçÔ∏è # If you care about sounding genuine or standing out in your writing, be careful using AI to write your text.\nBe as specific as possible in your prompts to get results that align with what you need. For example, ask it to write with a humorous tone and tell it who the target audience is. Make sure to give the generated text that human touch by revising the output. As with all other AI being released, use ChatGPT as a tool to supercharge your creative output.\n","date":"April 7, 2023","permalink":"/blog/ai-vs-creative-writing/","section":"Blog","summary":"While I was writing a Facebook post introducing my friend David as director of a debate tournament, I started thinking about the creative writing process and whether AI would be able to do it or not.","title":"AI vs. Creative Writing"},{"content":"","date":null,"permalink":"/tags/writing/","section":"Tags","summary":"","title":"writing"},{"content":"","date":null,"permalink":"/tags/data-processing/","section":"Tags","summary":"","title":"data processing"},{"content":"","date":null,"permalink":"/tags/data-scraping/","section":"Tags","summary":"","title":"data scraping"},{"content":"","date":null,"permalink":"/tags/quantitative-finance/","section":"Tags","summary":"","title":"quantitative finance"},{"content":"","date":null,"permalink":"/tags/aif/","section":"Tags","summary":"","title":"AIF"},{"content":"","date":null,"permalink":"/tags/high-school/","section":"Tags","summary":"","title":"high school"},{"content":"If you implement these three tips, you will increase your chances of being accepted. Disclaimer: I am not involved in the application process; these are my best guesses as to how you can succeed as an applicant to Waterloo.\nUniversity of Waterloo sign outside of the Dana Porter Library, 2022. 1. Understand the Application Process üß† # Read Director of Admissions for Waterloo Engineering William Bishop\u0026rsquo;s blog https://theroadtoengineering.com/. If you don\u0026rsquo;t know the rules of the game, you probably won\u0026rsquo;t play it well! Know how AIFs are scored and how you can maximize your chances of getting in.\n2. Research Features and Explain How You\u0026rsquo;ll Use Them üîç # Research the university\u0026rsquo;s specific positive features and write about how you would specifically fit into those features. For example, you could write about UWaterloo\u0026rsquo;s co-op program, but what exactly about it is better than other universities, how exactly would you take advantage of the program, and what would you offer the university in return as a member of the co-op program?\nAnswering these questions show that you really know what you want, and advertises what you offer to the university.\n3. Use the Branding Guidelinesü™û # Choose some character traits that you demonstrate well which align with Waterloo\u0026rsquo;s branding guidelines. Highlight those parts of you, illustrating how you fit into Waterloo from a character perspective. If you can match what Waterloo wants its brand to be like, you\u0026rsquo;re sure to be accepted.\nYou can do more of your research starting here: https://uwaterloo.ca/brand/about-waterloo-brand.\n","date":"January 7, 2023","permalink":"/blog/tips-for-waterloo-aif/","section":"Blog","summary":"If you implement these three tips, you will increase your chances of being accepted.","title":"Three Golden Tips for the Waterloo AIF"},{"content":"","date":null,"permalink":"/tags/dopamine/","section":"Tags","summary":"","title":"dopamine"},{"content":"This is what I learned about studying and lifestyle during my first study term in Software Engineering at Waterloo! This post is intended to reach future students to give advice, as well as current students looking for someone else\u0026rsquo;s perspective on 1A.\n1. Learn, Don\u0026rsquo;t Memorize ü§Ø # In university, the curriculum is more difficult than in high school. The testing is based on a real understanding of the content, not on being able to perform rote processes (like balancing chemical equations). If you only try to memorize, you will perform poorly and receive low grades.\nIf you don\u0026rsquo;t truly understand, you\u0026rsquo;ll regret it when you\u0026rsquo;re writing your exams. üò¨ Make sure that you understand content for real, not just memorize how to do things. Try explaining concepts to others in many perspectives, like understanding the cross product visually and algebraically.\nTo learn more, I suggest reading Waterloo Professor Dan Wolczuk\u0026rsquo;s excellent learning resources: http://wolczuk.com/learning.html. I also suggest watching this video by competitive programmer Colin Galen:\n2. Wield Your Dopamine üß™ # Dopamine is released in anticipation, and less so in receiving a reward. It causes habituation of behavior that seeks for high dopamine, such as opening a social media app, but these habits take time and anticipation away from other things.\nSome people suggest a \u0026ldquo;dopamine detox\u0026rdquo; to make you more interested in more boring things, but a detox doesn\u0026rsquo;t really work. This is because dopamine codes people to anticipate rewards, and the longer you restrain yourself from receiving a reward, the more likely you are to just binge a reward, feel shame, and go back to your bad habits.\nCut low-value distractions from your life and replace them with high-priority activities. Instead, it‚Äôs better to replace bad habits with things that give you more bang for your buck. Instead of looking forward to scrolling social media, look forward to your next study session (the actual act of studying, not a reward you get for studying), intramural, or friend hangout. Enjoy life to its max!\nYou can learn more on this perspective from YouTuber Sisyphus 55\u0026rsquo;s video: 3. Be Authentic ü§™ # Don\u0026rsquo;t try to be cool to make a bunch of friends and turn into a new popular figure at university. Be yourself, and even if you are less popular, the couple of friends that you do make will really like the true you and what you offer them.\nHaving too many friends makes for shallow relationships and a lot of stress. It\u0026rsquo;s better to have just a few close friends that you really vibe with. You can study together without as much distraction, work on projects together, maybe become roommates in the future. Just don\u0026rsquo;t force yourself to be inauthentic and a different person just to seek popularity.\nBiking and boarding with the boys on a chilly night, 2022 ","date":"January 6, 2023","permalink":"/blog/tips-first-term-waterloo/","section":"Blog","summary":"This is what I learned about studying and lifestyle during my first study term in Software Engineering at Waterloo!","title":"What I Learned From My First Term at UWaterloo"},{"content":"","date":null,"permalink":"/tags/github-pages/","section":"Tags","summary":"","title":"github pages"},{"content":"","date":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"hugo"},{"content":"I wanted a simple blog website that was easy to set up and use, and also one where I had ownership and customization: the answer was a Hugo static site hosted on GitHub Pages. In this post, I will explain how I set it all up, some challenges I ran into, and how you can set up your own website like this one!\nMe (illustrated as a duck) working on this website in my dorm. Table of Contents # High Level Overview Downloading and Using Hugo How to Learn Hugo and Use the Docs Pushing to Github and creating a Github Pages Website Bonus: Comments System 1. High Level Overview # This website is a static site, which means that the user sees the results of the fixed code that I write. Nothing will change unless I change something, so it\u0026rsquo;s like a brochure. The benefits of a static site are that they are simpler to set up and run super fast; for my blog, I don\u0026rsquo;t need anything more like a dynamic web page where I can add blog posts easily. If you have similar needs, I recommend Hugo to you.\nTo create the static site, I did not want to spend too much time playing with finicky HTML and CSS, so I opted to use Hugo. Hugo is an open source static site generator, where the user configures setting files and edits Markdown files, and then Hugo generates the HTML and CSS for you (you should still have an understanding of HTML and CSS to help debug in case you get stuck). You can read about Hugo here: https://gohugo.io/\nHugo comes with a ton of usable themes, some of which are perfect for blogs, that help users save even more time. For this website, I used the Congo theme. You can explore themes here: https://themes.gohugo.io/ There are many places you can host websites online for free, some popular options being Netlify and GitHub Pages. For now, I decided to host my website on GitHub Pages, simply because the project was already in a repository on GitHub and you can make unlimited updates to your site. This meant it would be relatively easy to set up and make updates to my site later, such as creating new posts. GitHub pages is also good in that it is secured (HTTPS), which makes users less suspicious of your site.\nBy creating a repository named [username].github.io, you can create a special GitHub page that doesn\u0026rsquo;t exist on a subpage (e.g. [username].github.io/my-blog). You can view my repository here: https://github.com/probablyalexzhu/probablyalexzhu.github.io\n2. Downloading and Using Hugo # To use Hugo, you will need to download the Go programming language and Git. You can download Go at https://go.dev/dl/, and Git at https://git-scm.com/. To learn a little bit how Git works, check out my article: https://probablyalexzhu.github.io/blog/lightning-speed-tutorial-git-and-github/.\nTo install Hugo, visit https://gohugo.io/installation/windows/ for the information. You will need to use a package manager; personally, Chocolatey did not work, but Scoop worked seamlessly.\nOnce you have Hugo, you will need to create a site using a theme. Every theme has a slightly different setup method and format, but for all of them, you will need to start by creating a Hugo project. This video is really helpful for showing how to create your first Hugo project and teaching you how a Hugo project is structured:\nThen, follow the instructions in the theme docs to download a theme. For example, the Congo theme instructions can be found at https://themes.gohugo.io/themes/congo/. For Congo, it took me three attempts to download the theme correctly, so don\u0026rsquo;t give up! What worked for me was downloading the config files from GitHub.\nOnce your theme is set up, simply run the command hugo server to create a local web server that serves from your computer\u0026rsquo;s memory. This is basically a live preview of your code\u0026rsquo;s changes, which makes it really easy to work on your website. Be careful that some changes won\u0026rsquo;t be reflected, such as the site favicon and blog tags (in my experience).\n3. How to Learn Hugo and Use the Docs # Hugo is incredibly powerful! Using Markdown and .toml configuration files, it makes it easy to make a good-looking website, with page templates, site-wide configuration, shortcodes, and more.\n90% of using Hugo is using its themes. Every theme has its own documentation; try to choose a theme with good documentation. For instance, the Congo theme\u0026rsquo;s docs were very complete! https://jpanther.github.io/congo/\nOnce I had the theme downloaded, I followed the docs in the order provided to configure everything. I was able to easily implement:\nrecent posts showing on the home page choosing theme colors and a light/dark mode toggle header links, footer text, and author bio just by changing some configuration settings.\nLater, when I had my own ideas for improvements, I used the search feature on the Congo docs to find documentation related to my issue. The majority of issues are resolvable through the docs, and the rest can be solved with a quick internet search and by extending the theme\u0026rsquo;s existing settings. In the future, I may add a page view counter using tutorials that can be found online.\nMake sure you understand your theme! Cross-reference resources for a deeper understanding of what you\u0026rsquo;re actually doing (especially types of pages and folder structures). If you do get stuck implementing something, look bigger picture. The error is likely high level, so check that your folder structures make sense and config files that affect the types of pages you\u0026rsquo;re working with. What you modify can have a lot of unforeseen consequences when it comes to Hugo generating your site.\n4. Pushing to Github and creating a GitHub Pages Website # There are a lot of tutorials on YouTube for this, but the simplest and most-straightforward one is by CodeNanshu. The video will show you how to add a .yml file in your Hugo project so that every time you push to GitHub using Git, GitHub Actions takes care of updating the site. A file named gh-pages.yml will be put in the folder .github/workflows\nThis is great because after every update you make to your website locally, it only takes a couple minutes after a push for your change to be reflected online, and it\u0026rsquo;s all automated!\nIf you want your website to not be a subpage, remember to name your repo [username].github.io to create a special GitHub page! 5. Bonus: Commenting System # One of the coolest features to make a static website more alive is a commenting system. There are many options for getting comments on your Hugo website, such as Disqus, Cactus Comments, Commento, and more. Hugo provides a full list here: https://gohugo.io/content-management/comments/.\nFrom my analysis, Utteranc.es is the best commenting system, as it runs using GitHub issues, so it is easy to set up, has no tracking or advertisements for users, and looks great too with its sleek customization options. The drawback is that website users need a GitHub account to comment, but for the target audience of this website, it shouldn\u0026rsquo;t be an issue üëç.\nTo set up Utteranc.es comments, go to https://utteranc.es/ and fill out the details required. The website will provide a script that you can copy. Put this script in your theme\u0026rsquo;s layouts/partials/comments.html file (you may have to create it). It should look like this, but modified:\n\u0026lt;script src=\u0026#34;https://utteranc.es/client.js\u0026#34; repo=\u0026#34;[ENTER REPO HERE]\u0026#34; issue-term=\u0026#34;pathname\u0026#34; theme=\u0026#34;github-light\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; After that, your blog posts should have comments at the bottom (look down)! I used this blog post by Michelle Scipioni to learn this in case you still have any more questions: https://mscipio.github.io/post/utterances-comment-engine/.\nGo with light theme comments if your site has toggleable light/dark mode, because dark comments stick out like a sore thumb on a light mode background. Conclusion # That\u0026rsquo;s basically it for how I made this website and you can too; I hope this was a helpful starting point for you. Once you\u0026rsquo;re set up, it\u0026rsquo;s a ton of fun to customize settings and get to creating content. Hugo and GitHub pages are two great resources for making simple websites, and I hope you enjoy making your own personal website!\n","date":"January 3, 2023","permalink":"/blog/tutorial-how-i-made-this-website-and-you-can-too/","section":"Blog","summary":"I wanted a simple blog website that was easy to set up and use, and also one where I had ownership and customization: the answer was a Hugo static site hosted on GitHub Pages.","title":"Tutorial: How I Made This Website and You Can Too"},{"content":"","date":null,"permalink":"/tags/git/","section":"Tags","summary":"","title":"git"},{"content":"","date":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"github"},{"content":"No one really teaches Git and GitHub, but it\u0026rsquo;s a must-know if you\u0026rsquo;re ever going to develop software in a group (like at a company).\nGit (2005) and GitHub (2008) are not the same thing, but they are used together. Git is a distributed version control system that you download, a system that tracks changes in files. GitHub is an online host that uses Git to store files and do version control. Using Git and GitHub is important because it allows people to collaborate on code and roll back if they mess something up. In fact, I\u0026rsquo;m using Git right now to update this website! This tutorial will get you up to speed on how to use Git \u0026amp; GitHub together in just a few minutes.\nGit and GitHub logos. 1. Download Git, Make GitHub Account üôã‚Äç‚ôÇÔ∏è # Download Git (free, open source, lightweight) for your computer here: https://git-scm.com/. The most important thing it will add is commands starting with the prefix \u0026ldquo;git\u0026rdquo; that you can type in your terminal. Did you know the IDE Terminal (e.g. VSCode) and the Command Prompt are the same thing? In a terminal, you will need to tell Git your credentials so it knows who is sending code before you begin any projects.\ngit config --global user.name \u0026#34;your name\u0026#34; git config --global user.email \u0026#34;username@example.com\u0026#34; Make a GitHub account at https://github.com/. Ideally, the email you use for GitHub is the same as the email you use for Git. You can customize everything at any time, but do not make it indecent as you will likely use this account for academics and work among other things.\n2. Make Your First Pair of Repositories üì¶üì¶ # A repository is a location where data is stored. You will make two repositories, so two places where your data will live simultaneously, one local on your computer and one remote on GitHub. On your computer, a repository is just a folder that you put files inside of. On GitHub, you create a new repository from your homepage as such.\nMake a new repository. 3. Commit Your First Code üë©‚Äçüíª # After you write some code in your local folder, you want to send it to your remote repository so that it matches. You can do this in terminal (either Command Prompt\u0026rsquo;s or editor\u0026rsquo;s with the following commands. For your first time, follow the code below. The comments provide a technical understanding, you don\u0026rsquo;t need to type them:\ncd \u0026#39;directory-name\u0026#39; //change directory to your local folder, if you need to exit a subfolder do cd .. git init // turns your folder into a newly initialized repository git add . // add all files in the folder to be committed git commit -m \u0026#34;first commit message\u0026#34; // commit all the files and write message that will accompany the change on GitHub git branch -M main // sets the change to occur on the main version of the code git remote add origin \u0026#39;URL\u0026#39; // sets destination of code to remote repository at that GitHub URL git push -u origin main // sends the code to the main version of the code on GitHub. Done! Vacation Analogy to Understand What You Just Did üèñ # Using the analogy of a vacation, imagine your computer is your local airport.\nWhen you change directory, you choose what code luggage you want to take with you. üß≥ When you initialize, you grab a new tray at the bag check-in. ü§è When you add, you put your chosen code into the tray. üì• When you commit, you put the tray with the code in it onto the conveyer belt and add a tag to explain the contents of the luggage. ‚õìÔ∏è When you set the branch, you tell the check-in agent which luggage conveyer belt the code should be received on at the destination airport (e.g. the main one). üõÉ When you add a remote origin, you tell them what airport the luggage is going to. üóº Finally, when you push, you push the tray of code down the conveyer belt and it arrives at the remote destination! ‚úàÔ∏è Man loading luggage onto conveyer belt with help of check-in agent. https://www.cathaypacific.com/cx/en_US/baggage.html 4. All Done! Future Use üîÆ # Now any time you edit your code locally, the airport agent already knows where your code has to go, so all you have to do is:\ncd // if necessary into your local repository git add . // put code in tray git commit -m \u0026#34;explanation of change\u0026#34; // put on conveyer belt git push // send it to its already known remote destination If there are ever new changes on the remote repository that aren\u0026rsquo;t reflected on your local repository (which happens if other people have been working on it from other places), you will have to git pull first to copy the changes to your computer. This gets rough when someone else changed code you\u0026rsquo;re currently working on; then you will have to deal with merge conflicts (not fun).\nCongratulations! You know how to get started with Git and GitHub now! You can code collaboratively, track changes quickly, and do version control. As a next step, you can learn about different ways to use Git and GitHub other than the terminal and how to deal with merge clips.\nMake sure to leave a comment if you have any questions or learned something from this.\n","date":"December 13, 2022","permalink":"/blog/lightning-speed-tutorial-git-and-github/","section":"Blog","summary":"No one really teaches Git and GitHub, but it\u0026rsquo;s a must-know if you\u0026rsquo;re ever going to develop software in a group (like at a company).","title":"Lightning Speed Tutorial: Git and GitHub"},{"content":"","date":null,"permalink":"/tags/arduino/","section":"Tags","summary":"","title":"arduino"},{"content":"","date":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"python"},{"content":"Our final project for SE101 was supposed to be a exercise tracker device that would revolutionize the fitness experience. It ended up being\u0026hellip; let\u0026rsquo;s call it a good learning experience. A lot of this article only exists thanks to my group members\u0026rsquo; efforts, so thanks to all of them for being great team members as we persevered together.\nSE 101 Final Project in progress, 2022 As software engineering students, it was tough when our final project guidelines forced us to use hardware. No one on my team of five, 4Fun, had much hardware experience, so we had to research a lot from scratch and made a lot of mistakes on the way. My plan in this article is talk about what we made on a technical level and provide takeaways for the future.\nWhat We Made üí™ # Hopefully you find the video entertaining. I must admit I was quite proud of the video we filmed and I edited, but I also must say that our cohort has some very talented video producers! One of my favourites was the skit about the gambling addict who needed special glasses to win at Blackjack and save his family.\nAnyways, the Github Repo: https://github.com/benymng/4FUN\n4Gains is a little device you put on a weight stack and it counts your reps, sets, and provides feedback on your performance. The feedback is all sent to a web app you can view on any device. I worked mainly on the hardware and backend sections of the project.\nHardware ü¶æ # Block diagram for hardware. This was our first time working with Arduino. We hooked up an Arduino Uno R3 to a battery, breadboard, and connected an LED, HC-SR04 Ultrasonic Distance Sensor, and ESP8266 Wi-Fi module. At first, we had programmed in an accelerometer to calculate stability, and planned to also program a sound sensor along with the distance sensor. However, we realized this was not the play for two main reasons. One, the power that three sensors would draw from the Arduino would be too much and make all the sensors not work properly. Secondly, the baud rates, the rates that data is transferred in a communication channel, were different for all the sensors, so the code would be pretty messy as well.\nWe also had crazy trouble setting up the ESP-8266, and getting wireless communication to work probably ate up a fortnight of our team\u0026rsquo;s time. The issue was power supply, not something we could really fix without buying a ton of new parts. Instead, we just had delay times between every command required to connect to Wi-Fi. This really slowed down progress, as every test would require a minute just to connect to Wi-Fi. This issue was made worse because we needed to connect to someone\u0026rsquo;s phone hotspot, as the university\u0026rsquo;s wifi interface was too secure for our questionable device to connect to.\nWiring diagram for the Arduino hardware. Hardware Takeaways üí° # Hardware is hard, so do less. While in software it may be easy to program three sensors that all inherit the \u0026ldquo;sensor\u0026rdquo; interface, it isn\u0026rsquo;t as easy to scale up in hardware projects. If it can be done easily, do it easily. By only using the distance sensor in hardware, we could calculate the acceleration by taking the derivative. No need for an accelerometer! We could also count reps and sets based on how high or low 4Gains moved up and down the weight stack. Do not make things more complicated than they need to be, especially on the hardware side of things.\nIntegrate first. Write crappy versions of your code and make sure all of it works together; hardware, backend, and frontend. This ensures that your final project will actually work. But on top of that, it means you can test way faster. After we had Wi-Fi connection working (mostly), we eventually started testing the hardware code without connecting to Wi-Fi every time. This saved us lots of time when coding the rest of the hardware, such as the LED response and detecting when the user is done a set (see below).\n/* Code Snippet of arduinoFinalWifi.ino */ // end set if statonary too long if(countTime \u0026gt; 25) { // 2.5 seconds // create string to be sent to web server String countRepString = \u0026#34;!\u0026#34; + String(countRep) + \u0026#34; \u0026#34;; String combined = countRepString + toSend; sendData(combined); // Serial.println(combined); // flash the LED! for(int i = 0; i \u0026lt; 8; i++) { digitalWrite(ledPin, HIGH); delay(125); digitalWrite(ledPin, LOW); delay(125); } } All in all, I feel like working with the hardware taught me a lot and I\u0026rsquo;ll be a lot more confident working with similar in the future.\nBackend ‚öôÔ∏è # Block diagram for hardware. On the backend, I wrote ParseGraphForDistance.py, which used the BeautifulSoup library to parse the text on the web server via its IP Address that the Arduino sent to the hotspot network. It then sent the text to the MongoDB database, where it would be analyzed to create takeaways like if the user is lifting too much or too little, and graphs that are displayed on the web app. For the prototype presentation where we didn\u0026rsquo;t have a database yet, I also used numpy to graph the data as a proof of concept of what the user would be able to see in the final product. These were both new libraries for me, but I am also much more comfortable with these now than before. It\u0026rsquo;s really great how many new things you are forced to learn when building a project!\nUnfortunately, I coded what is likely the weakest link in the program. However, this is by nature of the hardware being underpowered, and not me being clumsy. Since the ESP8266 Wi-Fi module wasn\u0026rsquo;t powered well, the data it sent to the server was on-and-off, so the BeautifulSoup parser often failed to access the server and retrieve the data. Here\u0026rsquo;s the httplib error that we have no control over:\nA connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond Backend Takeaways # Do research before you design your system. At Waterloo, we\u0026rsquo;re lucky to have access to a ton of human capital, mainly engineers that do hardware frequently (not us). We should have asked them what the best way to get data from an Arduino to a database was. We dived into building after just doing some Google searching, where we concluded that since we can\u0026rsquo;t read straight from the Arduino serial monitor without using PuTTy, the best option must be uploading to a web server and parsing the text. Our solution is really like trying to pour water from a shower to an anthromorphic alligator through a bunch of complicated pipes, and hoping nothing leaks. Where\u0026rsquo;s My Water gameplay, photo from https://games.lol/blog/wheres-my-water-2-beginners-guide/ It turns out there\u0026rsquo;s a much more direct solution, which another group figured out right before the deadline. Connect the Wi-Fi board, preferably a ESP32 that can be powered separately so it is fully powered, to the hotspot and upload data to a cloud server hosted by a service such as Render: Cloud Application Hosting. Then, host a JavaScript file that runs 24/7 on the cloud server that pushes the data to a MongoDB database anytime there\u0026rsquo;s an update to the server. I believe this works better because it draws less power as it doesn\u0026rsquo;t have to create its own local server, and you don\u0026rsquo;t have to manually run the parsing program on a computer on the same network as the Arduino. üì∂\nFrontend üé® # Oh yeah, and here\u0026rsquo;s the incredible frontend that really ties our project together. I had no hand in any of this, but it was very cool to watch. Our team started by designing it on Figma, then implementing it for real with React and Tailwind.\nBlock diagram for hardware. Frontend of the app, done by my fabulous teammates. Conclusion # The SE101 final project was a great learning experience. I\u0026rsquo;d like to thank my team again. In the end, I\u0026rsquo;m proud of our team for pulling together and creating something beyond what I thought was possible before we began, and I believe the rest of the teams in the cohort likely concluded with a similar sentiment. We all watched the past years\u0026rsquo; project demos and thought, \u0026ldquo;what am I doing in this program, these guys are all cracked,\u0026rdquo; but once we did it ourselves, we slowly built the projects we had dreamt of.\nTL:DR of my takeaways of the project once more: # Hardware is hard, so do less. Integrate first. Do research before you design your system. ","date":"December 7, 2022","permalink":"/blog/se-101-final-project-4gains/","section":"Blog","summary":"Our final project for SE101 was supposed to be a exercise tracker device that would revolutionize the fitness experience.","title":"SE 101 Final Project: Full Stack Arduino Exercise Tracker (4Gains)"},{"content":"","date":null,"permalink":"/tags/sockets/","section":"Tags","summary":"","title":"sockets"},{"content":"","date":null,"permalink":"/tags/first-post/","section":"Tags","summary":"","title":"first post"},{"content":"","date":null,"permalink":"/tags/motivations/","section":"Tags","summary":"","title":"motivations"},{"content":"Please read: this is not about relationships. This is about why I want to blog, and why you should read my blog. We should be reader and writer ‚ô•Ô∏è\nWanderer Above The Sea of Clouds. One of my favourite paintings, symbolically Who? üë®‚Äçüíª # I\u0026rsquo;m Alex Zhu, a software engineering student in SE \u0026lsquo;27 at UWaterloo. I grew up in the Ontario GTA and did a variety of activities, never settling on one thing. Random fact, but this isn\u0026rsquo;t my first blog. The first blog I wrote for was on the website I made for my Clash of Clans clan, Derp Kingdom, during my childhood. This blog is one of my latest projects that I want to put a significant chunk of time into.\nBut this blog is really about you. I hope to write for you, fellow peers and journeyers in the tech field.\nWhy? ü§î # I want to teach others. I don\u0026rsquo;t have a lot to share, but if we all share the little that we know, the world would be quite a bit better. Every person who replies on StackOverflow is someone\u0026rsquo;s GOAT. I hope my posts can provide the tiniest glimpses of insight, and maybe something that provides some value to you. I really want to hear from you! If you ever have questions about any of my ideas, feel free to leave a comment.\nWhat? üë®‚Äçüéì # I plan on blogging about my thoughts on life related to self-improvement and projects I work on as a software engineering student. No guarantees that it\u0026rsquo;ll be any good for you, but a new perspective can never hurt. In terms of projects, there\u0026rsquo;s a real joy in creating cool things, and a very real urge to show as many people as possible what you\u0026rsquo;ve created. As a result of my motivations, updating this blog is likely to be erratic and based on the ebbs and flows of writing inspiration.\nMy Blogging Goals üö® # Firstly, I want to consolidate my knowledge further by articulating and writing it a second time. As W. Edwards Deming said, \u0026ldquo;If you can\u0026rsquo;t describe what you\u0026rsquo;re doing as a process, then you don\u0026rsquo;t know what you\u0026rsquo;re doing.\u0026rdquo; Throughout my journey, I want to make sure I\u0026rsquo;m storing what I\u0026rsquo;ve learned in my inventory so they can help me with whatever the current opportunity is. By blogging, I should be able to recall what I learned from my past experiences easier. Why not social media? It simply isn\u0026rsquo;t a space catered for more formal thought or long ramblings, and you have little or no control over your content.\nSecondly, In high school, I debated competitively almost every weekend. Even though I\u0026rsquo;m studying software, I still enjoy using my language skills (not programming languages) and I want to keep them sharp and put them to good use.\nI\u0026rsquo;m hoping that in half a year, there will be a wealth of ideas and a small community built around this website that enriches everyone\u0026rsquo;s lives. The internet can do great things for people, and many of them start at a grassroots level like down here.\nFinal Words ‚úçÔ∏è # Every day, we have formative experiences that can change our worldview and improve who we are. This could be talking to a mentor, on the train, working in a team, or playing a video game. Many people know that these experiences can happen, and they do well in seeking out these experiences by leaving their comfort zone and doing new things.\nWhat may be slightly less common is really capturing these experiences. I believe that by living in the moment and being receptive, you can get conclusions and learn from even seemingly mundane events. Then, by writing these ideas down, you can retain them better and create something real that you can follow. For me, this blog is an outlet for my ideas to help me grow.\nFor you, it is hopefully a less mundane part of the mundanity of life and a place you can learn from.\nThank you reader!\n","date":"December 4, 2022","permalink":"/blog/why-we-should-be-together/","section":"Blog","summary":"Please read: this is not about relationships.","title":"Why We Should Be Together"},{"content":"","date":null,"permalink":"/tags/java/","section":"Tags","summary":"","title":"java"},{"content":"","date":null,"permalink":"/tags/networking/","section":"Tags","summary":"","title":"networking"},{"content":"This is the Readme file from our Grade 12 summative project. You can view the repository here: https://github.com/Edison-Du/Radomir-Chess.\nRadomir Chess Logo and Name. Overview # Radomir Chess is our ambitious Lichess/Chess.com-like chess application that runs purely on Java Swing. It features networking for many simultaneous multiplayer lobbies, a sophisticated and efficient chess engine, and an excellent UI complete with a login system. Our chess application is named after our computer science teacher, who will be marking this summative project.\nWe have packed Radomir Chess with features for a truly fun and functional chess application, but there are potential rooms for improvement. Mainly, implementing a chess clock could help create more timely matches, and an elo system could raise the stakes of the already exciting games.\nHow to Install # Do the following:\ndownload and unzip the repository For local use:\nrun one instance of Application.java found in the server folder run as many instance of Application.java found in the client server as desired make sure that the IP address in client \u0026gt; config \u0026gt; Consts.java is 127.0.0.1 For online use:\nrun as many instance of Application.java found in the client server as desired make sure that the IP address in client \u0026gt; config \u0026gt; Consts.java is the IP address of the server being run on a VM (the IP can be found in file) this will only work while the VM is being run, which cannot be guaranteed as this is a school project not meant for permanent hosting. How to Use # The Swing interface is intuitive. Use the left navigation bar to navigate between pages. The landing page will allow you to enter a chess match.\nTo create a game (public or private), press Create Game. To join a public game, you can find it in the Browse Games page or type in a game code in the Join Game page. Private games can only be joined by entering the lobby code on the Join Game page. To play against our bot, click Play Bot. In the chess match, drag the pieces to make move. On the right bar, you can chat with your opponent and offer a takeback, draw, or resign. In Settings, you can customize your game experience from 18 custom chess board themes, 5 custom chess piece sets, and 11 possible move colours. You can also toggle on/off move sounds and possible moves. The About Page tells you about Radomir Chess. In Login, you can register or login an account, which will let you display a custom username and save your custom settings. Quit closes the application (but why would you ever want to do that?). If you ever want to return to the landing page, just press Play on the left navigation bar. Images # Credits # This application was built by Team JPANEL, which incredibly, is an acronym for the team\u0026rsquo;s developers Jeffrey X, Peter G, Alex Z, Nicholas C, Edison D, and Leo G.\nThanks to Jeffrey for his expertise in UI implementation. Thanks to Peter for his work on the chess engine and the account system. Thanks to Alex for his networking and chess game UI/UX contributions. Thanks to Nicholas for his handling of game lobbies and UI design. Thanks to Edison for designing the overall client/server system, leading the project and lending a hand to everyone. And Thanks to Leo for his crafting of the chess engine and game logic.\nCredit to Lichess and Chess.com, from which much inspiration and assets for features and graphics were sourced.\nWe hope that you enjoy Radomir Chess!\n","date":"January 30, 2022","permalink":"/blog/radomir-chess-grade-12-summative/","section":"Blog","summary":"This is the Readme file from our Grade 12 summative project.","title":"Radomir Chess: Grade 12 Summative"},{"content":"","date":null,"permalink":"/tags/swing/","section":"Tags","summary":"","title":"swing"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]